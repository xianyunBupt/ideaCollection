<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 通过反射获取数据库连接信息-->
    <properties resource="db.properties"></properties>
    <!--    配置日志功能，便于程序的调试-->
    <settings>
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>
<!--    配置mapper.xml中的实体类的全限定名称的别名
name:实体类包的全限定名称
别名自动设置为实体类的类名，因此在mapper文件中resultType不需要写类的全限定名称了，只需要写类名即可
-->
    <typeAliases>
        <package name="com.myProject.domain"/>
    </typeAliases>
    <!--配置 mybatis 环境-->
    <environments default="mydev">
        <!--id:数据源的名称-->
        <environment id="mydev">
            <!--配置事务类型：使用 JDBC 事务（使用 Connection 的提交和回滚）-->
            <transactionManager type="JDBC"/>
            <!--数据源 dataSource：创建数据库 Connection 对象
            type: POOLED 使用数据库的连接池
            -->
            <dataSource type="POOLED">
                <!--连接数据库的四个要素-->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <!--告诉 mybatis 要执行的 sql 语句的位置-->
        <mapper resource="com/myProject/dao/StudentDao.xml"/>
    </mappers>
</configuration>